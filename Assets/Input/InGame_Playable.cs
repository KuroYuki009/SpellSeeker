//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.6.3
//     from Assets/Input/InGame_Playable.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InGame_Playable: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InGame_Playable()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""InGame_Playable"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""22853ce2-bf87-4241-9716-cf7ce945805d"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""e41e721e-916b-4337-9e93-ecc16db75ded"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Look"",
                    ""type"": ""Value"",
                    ""id"": ""dbc1a13a-3af6-4e99-9819-39eac2a368fa"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""UseCard"",
                    ""type"": ""Button"",
                    ""id"": ""968da27f-4bc0-41ee-bf7d-72f060bd3589"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TrashCard"",
                    ""type"": ""Button"",
                    ""id"": ""57f489fa-0e14-4978-b607-5d9f09ab1c87"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LockOn"",
                    ""type"": ""Button"",
                    ""id"": ""6ed0e403-3742-46c5-9b59-95f135f3b5f3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SecondaryAction"",
                    ""type"": ""Button"",
                    ""id"": ""a60049ef-6fb4-4b90-b22e-2107ee295987"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""978bfe49-cc26-4a3d-ab7b-7d7a29327403"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8223e53a-24f5-4775-a7f3-52349a297ad0"",
                    ""path"": ""<Gamepad>/dpad"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""WASD"",
                    ""id"": ""d8d78a34-fd40-44f2-940f-ea8b59898f62"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""b64d6202-b6a9-44f2-91e0-fd09d3eb3bf4"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""058b9b78-a967-4e1a-afbc-ad741d4fd186"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""4f9d256f-0e22-4cae-84aa-76f2e8f08670"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""cced3f3c-3beb-4f1a-bfc4-e891e9991fbb"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""c1f7a91b-d0fd-4a62-997e-7fb9b69bf235"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""ArrowKeys"",
                    ""id"": ""362d3757-9a2c-4c0c-b599-5f7ef28dd21a"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""936d19e4-8340-4560-bdad-9d2b7028a2c6"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""bf988fe2-040c-4b9f-a238-ab0aebcfc21f"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""2e21b2ba-c557-4292-b1c7-8cd138a83962"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""adc0401e-87d3-46b9-a6c1-3e2e64ff123a"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""496f520d-1355-466d-8ea4-218f286e020a"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""UseCard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""314aca47-bb95-44c0-a45c-735ab79e5d20"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""UseCard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""386848b4-b7f1-4e7e-a021-a0451e6087b1"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""UseCard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1a2862d8-8660-47d0-ba8f-57bff4ca70a4"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""TrashCard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""44958b5d-0569-4f46-9fb7-1009832ef0fd"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""TrashCard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ff111830-f174-43a3-ba3f-adacfa65d602"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""TrashCard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ecb60236-362a-410a-bd11-0ecc04dbe238"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""LockOn"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7654afd9-914a-451d-afb5-39a2c6fe3833"",
                    ""path"": ""<Keyboard>/leftAlt"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""LockOn"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8bd5091c-0be1-4f86-b270-4b46c8591fde"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""SecondaryAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b3b63f08-cac3-41ec-836d-ced857869a38"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""SecondaryAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UI"",
            ""id"": ""1d9b1bd6-6c46-4730-92db-9379f7e79da7"",
            ""actions"": [
                {
                    ""name"": ""CrossKey_Up"",
                    ""type"": ""Button"",
                    ""id"": ""393fa3a6-b598-4a03-a1d7-34fade670dd1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CrossKey_Down"",
                    ""type"": ""Button"",
                    ""id"": ""4fa8ba32-33b1-40a3-91f8-e6a49ae23586"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CrossKey_Right"",
                    ""type"": ""Button"",
                    ""id"": ""bbf49b57-5297-42fc-8300-3e06204e36e4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CrossKey_Left"",
                    ""type"": ""Button"",
                    ""id"": ""d0b9ac12-f1e0-4f8e-945c-2a2f92552f40"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""EnterButton"",
                    ""type"": ""Button"",
                    ""id"": ""dc78247b-4809-452e-a1c7-1da52ad78303"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CancelButton"",
                    ""type"": ""Button"",
                    ""id"": ""f39438a9-199f-4f83-b431-ddf14c4e6deb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""4cd53115-6821-4109-8add-aaac0932014a"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""CrossKey_Down"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""941bb21f-3efd-49d5-8b1b-e55c18195c18"",
                    ""path"": ""<HID::Nintendo Wireless Gamepad>/hat/down"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""CrossKey_Down"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8cc1b10c-4cc0-408b-8a53-2ad205f66687"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""CrossKey_Down"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""907685d6-dcc2-41e4-b75b-514d0cd72397"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""CrossKey_Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cc4ea380-dbf0-4a0e-b27a-989bdb81cff8"",
                    ""path"": ""<HID::Nintendo Wireless Gamepad>/hat/right"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""CrossKey_Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6b2d5e37-6e58-4339-a991-b4d675768617"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""CrossKey_Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a75151d1-92c7-4991-8df8-ce3e365ad9b3"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""CrossKey_Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""80e07a40-12e4-456e-83a7-2a46f261f33a"",
                    ""path"": ""<HID::Nintendo Wireless Gamepad>/hat/left"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""CrossKey_Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""483b2a04-bacb-4c35-9319-ffe322014f5e"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""CrossKey_Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9b8b8a3b-230f-4a05-b3c6-310ce56457e4"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""EnterButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""41ac6b5e-13b9-4b26-b5c6-42eb609c3e6e"",
                    ""path"": ""<HID::Nintendo Wireless Gamepad>/button2"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""EnterButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ef344181-53da-4061-aef2-ad25ace4520f"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""EnterButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""35ccf8a9-2b54-4805-89a2-2d30c4334f46"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""CancelButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""80deb479-6040-4c42-a75d-f11e8ba7b519"",
                    ""path"": ""<Joystick>/trigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""CancelButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9792758f-b861-4d30-9a19-119653311168"",
                    ""path"": ""<Keyboard>/backspace"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""CancelButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f07f3460-4164-43b2-a269-1f4505db4554"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""CrossKey_Up"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b045651c-8c61-4005-bab0-aeb1cd09b970"",
                    ""path"": ""<HID::Nintendo Wireless Gamepad>/hat/up"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""CrossKey_Up"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5ebebe08-869a-43e6-aafc-a05137a57550"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""CrossKey_Up"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""DynamicSelect"",
            ""id"": ""2e497b38-c0ee-4d74-bfa9-c97a8b886533"",
            ""actions"": [
                {
                    ""name"": ""SelectMove"",
                    ""type"": ""Value"",
                    ""id"": ""51df14b8-5999-4cdc-8801-82d0ab6d0801"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""EnterButton"",
                    ""type"": ""Button"",
                    ""id"": ""b8ac2456-2633-4397-9879-77c1169f766e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CancelButton"",
                    ""type"": ""Button"",
                    ""id"": ""e4dad158-71d7-4307-a8bd-b51ac89df136"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""8c62cadf-7fa3-409c-b79a-db9707d819f5"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""EnterButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""35ca2e71-9849-4889-bebb-b76ff0240ede"",
                    ""path"": ""<HID::Nintendo Wireless Gamepad>/button2"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""EnterButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9873dd6b-89a9-4b57-a150-89033351cf13"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""EnterButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dc3f6075-e7a9-4e75-9ee1-59e1497f2f46"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""SelectMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5704d2b9-d99a-4d43-b701-bacb9cca9391"",
                    ""path"": ""<Gamepad>/dpad"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""SelectMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""WASD"",
                    ""id"": ""e16ac1e6-c217-4b8e-a90f-228bd915c95a"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectMove"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""44c7ebb9-16ea-468a-98be-e112b83accf2"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""SelectMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""a18c4ada-2a01-40cc-bfc4-c24f64c3adbf"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""SelectMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""b175f8db-3a3b-468d-9d9d-64c99d93e547"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""SelectMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""f6484e76-3be6-419b-8365-097d7b8251f4"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""SelectMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""b38efec2-41e5-4f32-903f-59628cd8074e"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""CancelButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""03ffc283-4caf-4da9-b758-321aa46c26ac"",
                    ""path"": ""<Joystick>/trigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""CancelButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""df5409a8-90d4-463a-9475-57eb3111bbfe"",
                    ""path"": ""<Keyboard>/backspace"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""CancelButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Keyboard&Mouse"",
            ""bindingGroup"": ""Keyboard&Mouse"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Gamepad"",
            ""bindingGroup"": ""Gamepad"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Touch"",
            ""bindingGroup"": ""Touch"",
            ""devices"": [
                {
                    ""devicePath"": ""<Touchscreen>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Joystick"",
            ""bindingGroup"": ""Joystick"",
            ""devices"": [
                {
                    ""devicePath"": ""<Joystick>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""XR"",
            ""bindingGroup"": ""XR"",
            ""devices"": [
                {
                    ""devicePath"": ""<XRController>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Move = m_Player.FindAction("Move", throwIfNotFound: true);
        m_Player_Look = m_Player.FindAction("Look", throwIfNotFound: true);
        m_Player_UseCard = m_Player.FindAction("UseCard", throwIfNotFound: true);
        m_Player_TrashCard = m_Player.FindAction("TrashCard", throwIfNotFound: true);
        m_Player_LockOn = m_Player.FindAction("LockOn", throwIfNotFound: true);
        m_Player_SecondaryAction = m_Player.FindAction("SecondaryAction", throwIfNotFound: true);
        // UI
        m_UI = asset.FindActionMap("UI", throwIfNotFound: true);
        m_UI_CrossKey_Up = m_UI.FindAction("CrossKey_Up", throwIfNotFound: true);
        m_UI_CrossKey_Down = m_UI.FindAction("CrossKey_Down", throwIfNotFound: true);
        m_UI_CrossKey_Right = m_UI.FindAction("CrossKey_Right", throwIfNotFound: true);
        m_UI_CrossKey_Left = m_UI.FindAction("CrossKey_Left", throwIfNotFound: true);
        m_UI_EnterButton = m_UI.FindAction("EnterButton", throwIfNotFound: true);
        m_UI_CancelButton = m_UI.FindAction("CancelButton", throwIfNotFound: true);
        // DynamicSelect
        m_DynamicSelect = asset.FindActionMap("DynamicSelect", throwIfNotFound: true);
        m_DynamicSelect_SelectMove = m_DynamicSelect.FindAction("SelectMove", throwIfNotFound: true);
        m_DynamicSelect_EnterButton = m_DynamicSelect.FindAction("EnterButton", throwIfNotFound: true);
        m_DynamicSelect_CancelButton = m_DynamicSelect.FindAction("CancelButton", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private List<IPlayerActions> m_PlayerActionsCallbackInterfaces = new List<IPlayerActions>();
    private readonly InputAction m_Player_Move;
    private readonly InputAction m_Player_Look;
    private readonly InputAction m_Player_UseCard;
    private readonly InputAction m_Player_TrashCard;
    private readonly InputAction m_Player_LockOn;
    private readonly InputAction m_Player_SecondaryAction;
    public struct PlayerActions
    {
        private @InGame_Playable m_Wrapper;
        public PlayerActions(@InGame_Playable wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_Player_Move;
        public InputAction @Look => m_Wrapper.m_Player_Look;
        public InputAction @UseCard => m_Wrapper.m_Player_UseCard;
        public InputAction @TrashCard => m_Wrapper.m_Player_TrashCard;
        public InputAction @LockOn => m_Wrapper.m_Player_LockOn;
        public InputAction @SecondaryAction => m_Wrapper.m_Player_SecondaryAction;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Add(instance);
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @Look.started += instance.OnLook;
            @Look.performed += instance.OnLook;
            @Look.canceled += instance.OnLook;
            @UseCard.started += instance.OnUseCard;
            @UseCard.performed += instance.OnUseCard;
            @UseCard.canceled += instance.OnUseCard;
            @TrashCard.started += instance.OnTrashCard;
            @TrashCard.performed += instance.OnTrashCard;
            @TrashCard.canceled += instance.OnTrashCard;
            @LockOn.started += instance.OnLockOn;
            @LockOn.performed += instance.OnLockOn;
            @LockOn.canceled += instance.OnLockOn;
            @SecondaryAction.started += instance.OnSecondaryAction;
            @SecondaryAction.performed += instance.OnSecondaryAction;
            @SecondaryAction.canceled += instance.OnSecondaryAction;
        }

        private void UnregisterCallbacks(IPlayerActions instance)
        {
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @Look.started -= instance.OnLook;
            @Look.performed -= instance.OnLook;
            @Look.canceled -= instance.OnLook;
            @UseCard.started -= instance.OnUseCard;
            @UseCard.performed -= instance.OnUseCard;
            @UseCard.canceled -= instance.OnUseCard;
            @TrashCard.started -= instance.OnTrashCard;
            @TrashCard.performed -= instance.OnTrashCard;
            @TrashCard.canceled -= instance.OnTrashCard;
            @LockOn.started -= instance.OnLockOn;
            @LockOn.performed -= instance.OnLockOn;
            @LockOn.canceled -= instance.OnLockOn;
            @SecondaryAction.started -= instance.OnSecondaryAction;
            @SecondaryAction.performed -= instance.OnSecondaryAction;
            @SecondaryAction.canceled -= instance.OnSecondaryAction;
        }

        public void RemoveCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerActions @Player => new PlayerActions(this);

    // UI
    private readonly InputActionMap m_UI;
    private List<IUIActions> m_UIActionsCallbackInterfaces = new List<IUIActions>();
    private readonly InputAction m_UI_CrossKey_Up;
    private readonly InputAction m_UI_CrossKey_Down;
    private readonly InputAction m_UI_CrossKey_Right;
    private readonly InputAction m_UI_CrossKey_Left;
    private readonly InputAction m_UI_EnterButton;
    private readonly InputAction m_UI_CancelButton;
    public struct UIActions
    {
        private @InGame_Playable m_Wrapper;
        public UIActions(@InGame_Playable wrapper) { m_Wrapper = wrapper; }
        public InputAction @CrossKey_Up => m_Wrapper.m_UI_CrossKey_Up;
        public InputAction @CrossKey_Down => m_Wrapper.m_UI_CrossKey_Down;
        public InputAction @CrossKey_Right => m_Wrapper.m_UI_CrossKey_Right;
        public InputAction @CrossKey_Left => m_Wrapper.m_UI_CrossKey_Left;
        public InputAction @EnterButton => m_Wrapper.m_UI_EnterButton;
        public InputAction @CancelButton => m_Wrapper.m_UI_CancelButton;
        public InputActionMap Get() { return m_Wrapper.m_UI; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIActions set) { return set.Get(); }
        public void AddCallbacks(IUIActions instance)
        {
            if (instance == null || m_Wrapper.m_UIActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_UIActionsCallbackInterfaces.Add(instance);
            @CrossKey_Up.started += instance.OnCrossKey_Up;
            @CrossKey_Up.performed += instance.OnCrossKey_Up;
            @CrossKey_Up.canceled += instance.OnCrossKey_Up;
            @CrossKey_Down.started += instance.OnCrossKey_Down;
            @CrossKey_Down.performed += instance.OnCrossKey_Down;
            @CrossKey_Down.canceled += instance.OnCrossKey_Down;
            @CrossKey_Right.started += instance.OnCrossKey_Right;
            @CrossKey_Right.performed += instance.OnCrossKey_Right;
            @CrossKey_Right.canceled += instance.OnCrossKey_Right;
            @CrossKey_Left.started += instance.OnCrossKey_Left;
            @CrossKey_Left.performed += instance.OnCrossKey_Left;
            @CrossKey_Left.canceled += instance.OnCrossKey_Left;
            @EnterButton.started += instance.OnEnterButton;
            @EnterButton.performed += instance.OnEnterButton;
            @EnterButton.canceled += instance.OnEnterButton;
            @CancelButton.started += instance.OnCancelButton;
            @CancelButton.performed += instance.OnCancelButton;
            @CancelButton.canceled += instance.OnCancelButton;
        }

        private void UnregisterCallbacks(IUIActions instance)
        {
            @CrossKey_Up.started -= instance.OnCrossKey_Up;
            @CrossKey_Up.performed -= instance.OnCrossKey_Up;
            @CrossKey_Up.canceled -= instance.OnCrossKey_Up;
            @CrossKey_Down.started -= instance.OnCrossKey_Down;
            @CrossKey_Down.performed -= instance.OnCrossKey_Down;
            @CrossKey_Down.canceled -= instance.OnCrossKey_Down;
            @CrossKey_Right.started -= instance.OnCrossKey_Right;
            @CrossKey_Right.performed -= instance.OnCrossKey_Right;
            @CrossKey_Right.canceled -= instance.OnCrossKey_Right;
            @CrossKey_Left.started -= instance.OnCrossKey_Left;
            @CrossKey_Left.performed -= instance.OnCrossKey_Left;
            @CrossKey_Left.canceled -= instance.OnCrossKey_Left;
            @EnterButton.started -= instance.OnEnterButton;
            @EnterButton.performed -= instance.OnEnterButton;
            @EnterButton.canceled -= instance.OnEnterButton;
            @CancelButton.started -= instance.OnCancelButton;
            @CancelButton.performed -= instance.OnCancelButton;
            @CancelButton.canceled -= instance.OnCancelButton;
        }

        public void RemoveCallbacks(IUIActions instance)
        {
            if (m_Wrapper.m_UIActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IUIActions instance)
        {
            foreach (var item in m_Wrapper.m_UIActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_UIActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public UIActions @UI => new UIActions(this);

    // DynamicSelect
    private readonly InputActionMap m_DynamicSelect;
    private List<IDynamicSelectActions> m_DynamicSelectActionsCallbackInterfaces = new List<IDynamicSelectActions>();
    private readonly InputAction m_DynamicSelect_SelectMove;
    private readonly InputAction m_DynamicSelect_EnterButton;
    private readonly InputAction m_DynamicSelect_CancelButton;
    public struct DynamicSelectActions
    {
        private @InGame_Playable m_Wrapper;
        public DynamicSelectActions(@InGame_Playable wrapper) { m_Wrapper = wrapper; }
        public InputAction @SelectMove => m_Wrapper.m_DynamicSelect_SelectMove;
        public InputAction @EnterButton => m_Wrapper.m_DynamicSelect_EnterButton;
        public InputAction @CancelButton => m_Wrapper.m_DynamicSelect_CancelButton;
        public InputActionMap Get() { return m_Wrapper.m_DynamicSelect; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(DynamicSelectActions set) { return set.Get(); }
        public void AddCallbacks(IDynamicSelectActions instance)
        {
            if (instance == null || m_Wrapper.m_DynamicSelectActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_DynamicSelectActionsCallbackInterfaces.Add(instance);
            @SelectMove.started += instance.OnSelectMove;
            @SelectMove.performed += instance.OnSelectMove;
            @SelectMove.canceled += instance.OnSelectMove;
            @EnterButton.started += instance.OnEnterButton;
            @EnterButton.performed += instance.OnEnterButton;
            @EnterButton.canceled += instance.OnEnterButton;
            @CancelButton.started += instance.OnCancelButton;
            @CancelButton.performed += instance.OnCancelButton;
            @CancelButton.canceled += instance.OnCancelButton;
        }

        private void UnregisterCallbacks(IDynamicSelectActions instance)
        {
            @SelectMove.started -= instance.OnSelectMove;
            @SelectMove.performed -= instance.OnSelectMove;
            @SelectMove.canceled -= instance.OnSelectMove;
            @EnterButton.started -= instance.OnEnterButton;
            @EnterButton.performed -= instance.OnEnterButton;
            @EnterButton.canceled -= instance.OnEnterButton;
            @CancelButton.started -= instance.OnCancelButton;
            @CancelButton.performed -= instance.OnCancelButton;
            @CancelButton.canceled -= instance.OnCancelButton;
        }

        public void RemoveCallbacks(IDynamicSelectActions instance)
        {
            if (m_Wrapper.m_DynamicSelectActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IDynamicSelectActions instance)
        {
            foreach (var item in m_Wrapper.m_DynamicSelectActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_DynamicSelectActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public DynamicSelectActions @DynamicSelect => new DynamicSelectActions(this);
    private int m_KeyboardMouseSchemeIndex = -1;
    public InputControlScheme KeyboardMouseScheme
    {
        get
        {
            if (m_KeyboardMouseSchemeIndex == -1) m_KeyboardMouseSchemeIndex = asset.FindControlSchemeIndex("Keyboard&Mouse");
            return asset.controlSchemes[m_KeyboardMouseSchemeIndex];
        }
    }
    private int m_GamepadSchemeIndex = -1;
    public InputControlScheme GamepadScheme
    {
        get
        {
            if (m_GamepadSchemeIndex == -1) m_GamepadSchemeIndex = asset.FindControlSchemeIndex("Gamepad");
            return asset.controlSchemes[m_GamepadSchemeIndex];
        }
    }
    private int m_TouchSchemeIndex = -1;
    public InputControlScheme TouchScheme
    {
        get
        {
            if (m_TouchSchemeIndex == -1) m_TouchSchemeIndex = asset.FindControlSchemeIndex("Touch");
            return asset.controlSchemes[m_TouchSchemeIndex];
        }
    }
    private int m_JoystickSchemeIndex = -1;
    public InputControlScheme JoystickScheme
    {
        get
        {
            if (m_JoystickSchemeIndex == -1) m_JoystickSchemeIndex = asset.FindControlSchemeIndex("Joystick");
            return asset.controlSchemes[m_JoystickSchemeIndex];
        }
    }
    private int m_XRSchemeIndex = -1;
    public InputControlScheme XRScheme
    {
        get
        {
            if (m_XRSchemeIndex == -1) m_XRSchemeIndex = asset.FindControlSchemeIndex("XR");
            return asset.controlSchemes[m_XRSchemeIndex];
        }
    }
    public interface IPlayerActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnLook(InputAction.CallbackContext context);
        void OnUseCard(InputAction.CallbackContext context);
        void OnTrashCard(InputAction.CallbackContext context);
        void OnLockOn(InputAction.CallbackContext context);
        void OnSecondaryAction(InputAction.CallbackContext context);
    }
    public interface IUIActions
    {
        void OnCrossKey_Up(InputAction.CallbackContext context);
        void OnCrossKey_Down(InputAction.CallbackContext context);
        void OnCrossKey_Right(InputAction.CallbackContext context);
        void OnCrossKey_Left(InputAction.CallbackContext context);
        void OnEnterButton(InputAction.CallbackContext context);
        void OnCancelButton(InputAction.CallbackContext context);
    }
    public interface IDynamicSelectActions
    {
        void OnSelectMove(InputAction.CallbackContext context);
        void OnEnterButton(InputAction.CallbackContext context);
        void OnCancelButton(InputAction.CallbackContext context);
    }
}
